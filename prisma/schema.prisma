// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(cuid())
  uuid             String   @unique
  username         String
  email            String
  picture          String
  name             String
  permission       Int      @default(0)
  acceptedInviteId String?
  note             String?  @default("") // This is for admins to leave notes on a user. It's not visible to the user.
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  acceptedInvite Invite?   @relation(fields: [acceptedInviteId], references: [id], name: "AcceptedInvite")
  Invite         Invite[]  @relation(name: "InviteOwner")
  Session        Session[]
}

model Session {
  id     String  @id @default(cuid())
  userId String?
  token  String  @unique

  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User? @relation(fields: [userId], references: [id])
}

model Invite {
  id            String   @id @default(cuid())
  token         String   @unique
  remainingUses Int
  expiresAt     DateTime
  ownerId       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  User  User[] @relation(name: "AcceptedInvite")
  owner User   @relation(fields: [ownerId], references: [id], name: "InviteOwner")
}
